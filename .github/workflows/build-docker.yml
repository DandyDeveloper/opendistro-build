name: Build ODFE Docker Image and Upload

on:
  push:
    branches:
      - github-demo-branch
jobs:
  build-es-docker:
    name: Build ES Dcoker Image
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Starting ES Build
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        ODFE_VER: 1.3.0
      run: |
        #sudo apt-get install python-virtualenv
        work_dir=`pwd`
        echo $work_dir
        cd elasticsearch/docker
        #make build
        
        echo "******************************"
        echo "Login to Docker"
        echo "******************************"
        #docker login --username $DOCKER_USER --password $DOCKER_PASS
        #docker images|grep "amazon/opendistro-for-elasticsearch" > docker_id.out
        #image_id=`awk -F' ' '{print $3}' docker_id.out`
        #echo "Docker Id is $image_id"
        #docker tag $image_id opendistroforelasticsearch/opendistroforelasticsearch:$ODFE_VER
        #docker images
        #docker push opendistroforelasticsearch/opendistroforelasticsearch:$ODFE_VER
  
  build-kibana-docker:
    needs: [build-es-docker]
    name: Build Kibana Docker
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Starting Kibana Build
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
          ODFE_VER: 1.3.0
        run: |
          sudo apt-get install python-virtualenv
          cd kibana/docker
          #make build
          
          echo "******************************"
          echo "Uploading Kibana Docker"
          echo "******************************"
          #docker login --username $DOCKER_USER --password $DOCKER_PASS
          #docker images|grep "amazon/opendistro-for-elasticsearch-kibana" > kibana_id.out
          #kibana_image_id=`awk -F' ' '{print $3}' kibana_id.out`
          #echo "Docker Id is $kibana_image_id"
          #docker tag $kibana_image_id opendistroforelasticsearch/opendistroforelasticsearch-kibana:$ODFE_VER
          #docker push opendistroforelasticsearch/opendistroforelasticsearch-kibana:$ODFE_VER
        
  test-es-docker-image:
    needs: [build-es-docker]
    name: Test ES Docker Container
    runs-on: [ubuntu-16.04]
    steps:
      - uses: actions/checkout@v1
        with:
          repository: rishabh6788/odfe-test
          ref: master
          token: ${{ secrets.GitHub_PAT }}
      - name: Run Docker Container
        run: |
          sleep 10
          docker run -d -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" opendistroforelasticsearch/opendistroforelasticsearch:1.3.0
      - name: Run ES Tests
        run: |
          sleep 1m

          cd ..
          cd odfe-test
          ls -ltr
          cd odfe-test
          sudo pip3 install pytest
          sudo pip3 install requests
          pytest

  test-alerting-plugin:
    needs: [build-es-docker]
    name: Test Alerting Plugin
    runs-on: [ubuntu-16.04]
    steps:
      - uses: actions/checkout@v1
        with:
          repository: rishabh6788/odfe-test
          ref: master
          token: ${{ secrets.GitHub_PAT }}
      - name: Run Docker Container
        run: |
          sleep 10
          docker run -d -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" opendistroforelasticsearch/opendistroforelasticsearch:1.3.0
      - name: Run ES Tests
        run: |
          sleep 1m

          cd ..
          cd odfe-test
          ls -ltr
          cd odfe-test
          sudo pip3 install pytest
          sudo pip3 install requests
          pytest

  test-security-plugin:
    needs: [build-es-docker]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "Security Tests to be run"

  test-sql-plugin:
    needs: [build-es-docker]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "SQL Tests to be run"

  test-ISM-plugin:
    needs: [build-es-docker]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "ISM Tests to be run"

  test-job-scehduler-plugin:
    needs: [build-es-docker]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "Job Scheduler Tests to be run"

  test-Performance-Analyzer-plugin:
    needs: [build-es-docker]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "Performance Analyzer Tests to be run"
