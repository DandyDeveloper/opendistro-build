name: Process Debian Artifacts

on:
  push:
    branches:
      - github-demo-branch
jobs:
  build-es-artifacts:
    name: Build ES Artifacts
    runs-on: ubuntu-latest
    container:
      image: opendistroforelasticsearch/multijava08101112-git:v1

    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build deb
        run: |
          #!/bin/bash -x
          set -e
          set -u
          export JAVA_HOME=/openjdk12
          export PATH=$JAVA_HOME:$PATH
          cd elasticsearch/linux_distributions
          #./gradlew buildDeb --console=plain -Dbuild.snapshot=false -b ./build.gradle
          #ls -ltr build/distributions/*.deb
          #deb_artifact=`ls build/distributions/*.deb`

          #aws s3 cp $deb_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs/opendistro-elasticsearch/
          #aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/downloads/*"
          echo "DEB creation for ES completed"

  build-kibana-artifacts:
    needs: [build-es-artifacts]
    name: Build Kibana Artifacts
    runs-on: [ubuntu-latest]
    container:
      image: opendistroforelasticsearch/jsenv:v1
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build Kibana deb
        run: |
          #!/bin/bash -x
          cd kibana/linux_distributions
          #sh generate-pkg.sh
          #deb_artifact=`ls target/*.deb`
          #ls -ltr target/
          #tar_checksum_artifact=`ls target/*.tar.gz.sha512`
          #aws s3 cp $deb_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs/opendistroforelasticsearch-kibana/

  sign-deb-artifacts:
    needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: [ubuntu-latest]
    container:
      image: opendistroforelasticsearch/base-ubuntu
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Sign Deb Artifacts
        env:
          passphrase: ${{ secrets.PASSPHRASE }}
        run: |

          echo "deb http://repo.aptly.info/ squeeze main" | sudo tee -a /etc/apt/sources.list.d/aptly.list
          #sudo apt-get install -y gnupg1
          #sudo apt install -y gpgv1
          #alias gpg=gpg1
          #wget -qO - https://www.aptly.info/pubkey.txt | sudo apt-key add -

          #sudo apt-get update -y
          #sudo apt-get install -y aptly
          #aws s3 cp s3://opendistro-docs/github-actions/pgp-public-key .
          #aws s3 cp s3://opendistro-docs/github-actions/pgp-private-key .

          #aptly repo create -distribution=stable -component=main odfe-release

          #mkdir -p downloads/debs
          #aws s3 sync s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs downloads/debs
          #aptly repo add odfe-release downloads

          #aptly repo show -with-packages odfe-release
          #aptly snapshot create opendistroforelasticsearch from repo odfe-release
          #aptly snapshot list


          #gpg --import pgp-public-key
          #gpg --allow-secret-key-import --import pgp-private-key
          #echo "Printing Secret List"
          #ls -ltr ~/.gnupg/
          #gpg --list-secret

          #aptly publish snapshot -batch=true -passphrase=$passphrase opendistroforelasticsearch

          #aws s3 sync ~/.aptly/public/ s3://artifacts.opendistroforelasticsearch.amazon.com/staging/apt

          #aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/staging/apt/*"

  test-deb-artifacts:
    needs: [sign-deb-artifacts]
    runs-on: [ubuntu-16.04]
    steps:
      - uses: actions/checkout@v1
        with:
          repository: rishabh6788/odfe-test
          ref: master
          token: ${{ secrets.GitHub_PAT }}
      - name: Run Debian Staging Distrubution
        run: |
          sleep 20
          sudo sysctl -w vm.max_map_count=262144

          sudo add-apt-repository -y ppa:openjdk-r/ppa
          sudo apt update -y
          sudo apt install -y openjdk-11-jdk
          sudo sudo apt install -y net-tools

          wget -qO - https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch | sudo apt-key add -
          echo "deb https://d3g5vo6xdbdb9a.cloudfront.net/staging/apt stable main" | sudo tee -a /etc/apt/sources.list.d/opendistroforelasticsearch.list

          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.3.2-amd64.deb
          sudo dpkg -i elasticsearch-oss-7.3.2-amd64.deb

          sudo apt-get -y update
          sudo apt install -y opendistroforelasticsearch

          sudo /etc/init.d/elasticsearch start

          sleep 30
          sudo ls -ltr /var/log/elasticsearch/
          sudo cat /var/log/elasticsearch/elasticsearch.log
          sudo netstat -natp

      - name: Run ES Tests
        run: |
          cd ..
          cd odfe-test
          ls -ltr
          cd odfe-test
          sudo pip3 install pytest
          sudo pip3 install requests
          pytest

  test-alerting-plugin:
    needs: [sign-deb-artifacts]
    runs-on: [ubuntu-16.04]
    steps:
      - uses: actions/checkout@v1
        with:
          repository: rishabh6788/odfe-test
          ref: master
          token: ${{ secrets.GitHub_PAT }}
      - name: Run Debian Staging Distrubution
        run: |
          sleep 20
          sudo sysctl -w vm.max_map_count=262144

          sudo add-apt-repository -y ppa:openjdk-r/ppa
          sudo apt update -y
          sudo apt install -y openjdk-11-jdk
          sudo sudo apt install -y net-tools

          wget -qO - https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch | sudo apt-key add -
          echo "deb https://d3g5vo6xdbdb9a.cloudfront.net/staging/apt stable main" | sudo tee -a /etc/apt/sources.list.d/opendistroforelasticsearch.list

          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.3.2-amd64.deb
          sudo dpkg -i elasticsearch-oss-7.3.2-amd64.deb

          sudo apt-get -y update
          sudo apt install -y opendistroforelasticsearch

          sudo /etc/init.d/elasticsearch start

          sleep 30
          sudo ls -ltr /var/log/elasticsearch/
          sudo cat /var/log/elasticsearch/elasticsearch.log
          sudo netstat -natp

      - name: Run Alerting Tests
        run: |
          cd ..
          cd odfe-test
          ls -ltr
          cd odfe-test
          sudo pip3 install pytest
          sudo pip3 install requests
          pytest
          
  test-security-plugin:
    needs: [sign-deb-artifacts]
    runs-on: [ubuntu-16.04]
    steps:
      - name: Run Security Plugin Tests
        run: echo "Security Tests to be run"
